<h2>注文履歴詳細</h2>

<h3>注文情報</h3>
<table>
  <tr>
    <th>注文日</th>
    <td><%= @order.created_at.strftime('%Y/%d/%d') %></td>
  </tr>
  <tr>
    <th>配送先</th>
    <td>
      〒<%= @order.postal_code %></br>
      <%= @order.address %></br>
      <%= @order.name %>
    </td>
  </tr>
  <tr>
    <th>支払方法</th>
    <td><%= @order.payment_method_i18n %></td>
  </tr>
  <tr>
    <th>ステータス</th>
    <td><%= @order.order_status_i18n %></td>
  </tr>
</table>

<h3>請求情報</h3>
<table>
  <tr>
    <th>商品合計</th>
    <td>
      <!--Oderモデルに紐づいているOrderDetailモデルが"price_with_tax"という購入時税込み価格をカラムとして持っているのでそれを使ってオーダー時の商品合計を求める。-->
      <% @order.order_details.each do |order_detail| %>  <!--OrderとOrderDetailは1対Nの関係なので、Orderに入っている全てのOrderDetailに対して(each)-->
        <% @ordered_total_price += (order_detail.price_with_tax * order_detail.amount) %>  <!--コントローラーで定義した@ordered_total_priceという変数に、OrderDetailが持つ"price_with_tax(単価)"に"amount"を掛け、足し合わせてあげる-->
      <% end %>
      <%= @ordered_total_price %>  <!--上で足し合わせた@ordered_total_priceをここで表示させる。上(each内)で表示させてしまうと、各商品毎のトータル(A:2個、B:3個だとすると今回ほしいのは(A*2)+(B*3)なのに、(A*2),(B*3)という独立した金額が出てしまうため。)-->
    </td>
  </tr>
  <tr>
    <th>配送料</th>
    <td></td>
  </tr>
  <tr>
    <th>ご請求金額</th>
    <td></td>
  </tr>
</table>

<h3>注文内容</h3>